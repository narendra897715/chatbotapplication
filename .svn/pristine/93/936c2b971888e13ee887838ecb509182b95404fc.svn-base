(function() {
  'use strict';
var Authentication =  angular.module('landing',['ngMaterial', 'ngMessages', 'ngAnimate', 'ngAria', 'ngResource','ui.router', 'md.data.table',
	                                          , 'Authentication.ScreenDirectives'
	                                          , 'Authentication.Services'
	                                          ]), tokenName = window.name+"Token";
Authentication.config(["$locationProvider", "$stateProvider", "$urlRouterProvider", "$mdThemingProvider" ,function(l, s, u, t) {
 l.hashPrefix('');
 u.otherwise("/");
 s.state('logIn', { url: "/", template: '<login-screen layout-fill layout="row" layout-align="center center"></login-screen>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if ($window.localStorage.getItem(tokenName)) { $state.go('landingScreen'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen', { url: "/landingScreen", template: '<landing-screen layout-fill></landing-screen>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; }}})
 s.state('landingScreen.productMaster', { url: "/productMaster", template: '<product-master layout-fill></product-master>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Occasion', { url: "/occasion", template: '<occasion layout-fill></occasion>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.categoryMaster', { url: "/categoryMaster", template: '<category-master layout-fill></category-master>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.SubCategory', { url: "/SubCategory", template: '<sub-category layout-fill></sub-category>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.NOCategory', { url: "/NOCategory", template: '<no-category layout-fill></no-category>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.NOCategoryCode', { url: "/NOCategoryCode", template: '<no-category-code layout-fill></no-category-code>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.FabricType', { url: "/FabricType", template: '<fabric-type layout-fill></fabric-type>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.ProductType', { url: "/ProductType", template: '<product-type layout-fill></product-type>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Fabrication', { url: "/Fabrication", template: '<fabrication layout-fill></fabrication>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.ProductStyle', { url: "/ProductStyle", template: '<product-style layout-fill></product-style>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.ColorFamily', { url: "/ColorFamily", template: '<color-family layout-fill></color-family>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.ColorVariant', { url: "/ColorVariant", template: '<color-variant layout-fill></color-variant>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Shade', { url: "/Shade", template: '<shade layout-fill></shade>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Pattern', { url: "/Pattern", template: '<pattern layout-fill></pattern>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Scale', { url: "/Scale", template: '<scale layout-fill></scale>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } }); 
 s.state('landingScreen.NOSeason', { url: "/NOSeason", template: '<no-session layout-fill></no-session>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Season', { url: "/Season", template: '<session layout-fill></session>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Collection', { url: "/Collection", template: '<collection layout-fill></collection>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.Collar', { url: "/Collar", template: '<collar layout-fill></collar>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.BottomRise', { url: "/BottomRise", template: '<bottom-rise layout-fill></bottom-rise>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } }); 
 s.state('landingScreen.Size', { url: "/Size", template: '<size layout-fill></size>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.NoSize', { url: "/NoSize", template: '<no-size layout-fill></no-size>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.ShopifySize', { url: "/ShopifySize", template: '<shopify-size layout-fill></shopify-size>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('landingScreen.FashionPyramid', { url: "/FashionPyramid", template: '<fashion-pyramid layout-fill></fashion-pyramid>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 s.state('changePassword', { url: "/changePassword", template: '<change-password-screen layout-fill layout="row" layout-align="center center"></change-password-screen>', resolve: { data: function($q, $state, $window, $timeout) { var deferred = $q.defer(); $timeout(function() { if (!$window.localStorage.getItem(tokenName)) { $state.go('logIn'); deferred.reject(); } else { deferred.resolve(); } }); return deferred.promise; } } });
 //t.generateThemesOnDemand(false);
 
 t.alwaysWatchTheme(true);
 t.definePalette('meritusBlue', t.extendPalette('indigo', { '50': '#372F85', 'A700': '#708E21', 'contrastDefaultColor': 'light' }));
 t.definePalette('meritusGreen', t.extendPalette('light-green', { '50': '#99b230', 'A700': '#372F85', 'contrastDefaultColor': 'light' }));
 t.theme('meritus').primaryPalette('meritusBlue', { 'default': '50' }).accentPalette('meritusGreen', { 'default': '50' }).warnPalette('red', { 'default': '700' });
 /*t.theme('red').primaryPalette('red', { 'default': '900' }).accentPalette('red', { 'default': '50' }).warnPalette('red', { 'default': '50' }); 
 t.theme('pink').primaryPalette('pink', { 'default': '900' }).accentPalette('pink', { 'default': '50' }).warnPalette('pink', { 'default': '50' }); 
 t.theme('purple').primaryPalette('purple', { 'default': '900' }).accentPalette('purple', { 'default': '50' }).warnPalette('purple', { 'default': '50' });
 t.theme('deep-purple').primaryPalette('deep-purple', { 'default': '900' }).accentPalette('deep-purple', { 'default': '50' }).warnPalette('deep-purple', { 'default': '50' });
 t.theme('indigo').primaryPalette('indigo', { 'default': '900' }).accentPalette('indigo', { 'default': '50' }).warnPalette('indigo', { 'default': '50' });
 t.theme('blue').primaryPalette('blue', { 'default': '900' }).accentPalette('blue', { 'default': '50' }).warnPalette('blue', { 'default': '50' });
 t.theme('light-blue').primaryPalette('light-blue', { 'default': '900' }).accentPalette('light-blue', { 'default': '50' }).warnPalette('light-blue', { 'default': '50' });
 t.theme('cyan').primaryPalette('cyan', { 'default': '900' }).accentPalette('cyan', { 'default': '50' }).warnPalette('cyan', { 'default': '50' });
 t.theme('teal').primaryPalette('teal', { 'default': '900' }).accentPalette('teal', { 'default': '50' }).warnPalette('teal', { 'default': '50' });
 t.theme('green').primaryPalette('green', { 'default': '900' }).accentPalette('green', { 'default': '50' }).warnPalette('green', { 'default': '50' });
 t.theme('light-green').primaryPalette('light-green', { 'default': '900' }).accentPalette('light-green', { 'default': '50' }).warnPalette('light-green', { 'default': '50' });
 t.theme('lime').primaryPalette('lime', { 'default': '900' }).accentPalette('lime', { 'default': '50' }).warnPalette('lime', { 'default': '50' });
 t.theme('yellow').primaryPalette('yellow', { 'default': '900' }).accentPalette('yellow', { 'default': '50' }).warnPalette('yellow', { 'default': '50' });    
 t.theme('amber').primaryPalette('amber', { 'default': '900' }).accentPalette('amber', { 'default': '50' }).warnPalette('amber', { 'default': '50' });  
 t.theme('orange').primaryPalette('orange', { 'default': '900' }).accentPalette('orange', { 'default': '50' }).warnPalette('orange', { 'default': '50' });        
 t.theme('deep-orange').primaryPalette('deep-orange', { 'default': '900' }).accentPalette('deep-orange', { 'default': '50' }).warnPalette('deep-orange', { 'default': '50' });        
 t.theme('brown').primaryPalette('brown', { 'default': '900' }).accentPalette('brown', { 'default': '50' }).warnPalette('brown', { 'default': '50' });        
 t.theme('grey').primaryPalette('grey', { 'default': '900' }).accentPalette('grey', { 'default': '50' }).warnPalette('grey', { 'default': '50' });           
 t.theme('blue-grey').primaryPalette('blue-grey', { 'default': '900' }).accentPalette('blue-grey', { 'default': '50' }).warnPalette('blue-grey', { 'default': '50' });*/
 //t.enableBrowserColor({ theme: 'meritus', palette: 'accent', hue: '200' });
}]);
Authentication.controller('landingController',['$mdTheming',function(mt){ /*mt.generateTheme('meritus');*/ }]);
})();

